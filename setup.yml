---
- hosts: proxy

  tasks:
    - name: Check if Docker and docker-compose already exist
      shell: which docker && which docker-compose
      register: docker_exists
      failed_when: no

    - name: Install Docker and docker-compose
      include_role:
        name: geerlingguy.docker
      vars:
        ansible_become: yes
        # eoan is not supported yet, so use bionic as workaround
        docker_apt_repository: "deb [arch={{ docker_apt_arch }}] https://download.docker.com/linux/ubuntu bionic {{ docker_apt_release_channel }}"
      when:
        - docker_exists.rc != 0

    - name: Add WireGuard APT repository
      apt_repository:
        repo: ppa:wireguard/wireguard

    - name: Install WireGuard and UFW
      apt:
        name: wireguard,ufw
        state: present

    - name: UFW allow SSH
      become: yes
      ufw:
        rule: allow
        port: ssh
        proto: tcp

    - name: UFW enable and deny incoming by default
      become: yes
      ufw:
        state: enabled
        default: deny
        direction: incoming

    - name: Create project directory
      file:
        path: wireguard/
        state: directory
        mode: "0755"

    - name: Check if WireGuard keys are provided by user
      set_fact:
        wg_user_keys: >-
          {{ ctf_wg_server_privkey|length > 0
          and ctf_wg_server_pubkey|length > 0
          and ctf_wg_client_privkey|length > 0
          and ctf_wg_client_pubkey|length > 0 }}

    - name: Check if WireGuard profile already created
      when: not wg_user_keys
      stat:
        path: wireguard/wg-server.conf
      register: wg_status

    - name: Generate WireGuard keys
      when: not wg_user_keys and not wg_status.stat.exists
      block:
        - shell: wg genkey
          register: ctf_wg_server_gen_privkey
        - shell: echo {{ ctf_wg_server_privkey.stdout }} | wg pubkey
          register: ctf_wg_server_gen_pubkey
        - shell: wg genkey
          register: ctf_wg_client_gen_privkey
        - shell: echo {{ ctf_wg_client_privkey.stdout }} | wg pubkey
          register: ctf_wg_client_gen_pubkey
        - set_fact:
            ctf_wg_server_privkey: "{{ ctf_wg_server_gen_privkey.stdout }}"
            ctf_wg_server_pubkey: "{{ ctf_wg_server_gen_pubkey.stdout }}"
            ctf_wg_client_privkey: "{{ ctf_wg_client_gen_privkey.stdout }}"
            ctf_wg_client_pubkey: "{{ ctf_wg_client_gen_pubkey.stdout }}"

    - name: Update WireGuard profile
      when: wg_user_keys or not wg_status.stat.exists
      template:
        src: docker/wg-server.conf
        dest: wireguard/wg-server.conf

    - name: Update Docker configuration
      template:
        src: docker/{{ item }}
        dest: wireguard/{{ item }}
      loop:
        - start.sh
        - Dockerfile
        - docker-compose.yml

    - name: Run docker-compose
      command:
        cmd: docker-compose up -d --build
        chdir: wireguard/
      become: yes

    - name: Generate client profile in "wg-client.conf"
      delegate_to: "localhost"
      when: wg_user_keys or not wg_status.stat.exists
      template:
        src: templates/wg-client.conf
        dest: wg-client.conf
